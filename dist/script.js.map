{"version":3,"sources":["script.js"],"names":["darkButton","document","getElementById","lightButton","setDarkMode","querySelector","classList","localStorage","setItem","setLightMode","colorModeFromLocalStorage","getItem","colorModeFromPreferences","window","matchMedia","matches","loadAndUpdateColor","click","radioButtons","querySelectorAll","forEach","button","addEventListener","event","checked"],"mappings":"AAAA,aAYA,IAAMA,WAAaC,SAASC,eAAe,QACrCC,YAAcF,SAASC,eAAe,SAEtCE,YAAc,WAChBH,SAASI,cAAc,QAAQC,UAAY,OAC3CC,aAAaC,QAAQ,YAAa,OACtC,EAEMC,aAAe,WACjBR,SAASI,cAAc,QAAQC,UAAY,QAC3CC,aAAaC,QAAQ,YAAa,QACtC,EAEME,0BAA4B,WAC9B,OAAOH,aAAaI,QAAQ,YAChC,EAEMC,yBAA2B,WAC7B,OAAOC,OAAOC,WAAW,gCAAgCC,QACnD,OACA,OACV,EAEMC,mBAAqB,WAGd,SADKN,6BAA+BE,4BAC3BZ,WAAWiB,QAAUd,YAAYc,OACvD,EAGMC,aAAejB,SAASkB,iBAAiB,0BAC/CD,aAAaE,SAAQ,SAAAC,GACjBA,EAAOC,iBAAiB,SAAS,SAACC,GAC9BvB,WAAWwB,QAAUpB,cAAgBK,cACzC,GACJ,IAIAI,OAAOC,WAAW,gCACbQ,iBAAiB,UAAU,SAACC,GACzBA,EAAMR,QAAUf,WAAWiB,QAAUd,YAAYc,OACrD,IAGJD","file":"script.js","sourcesContent":["\r\n/*\r\nThe first time the page is loaded, the color mode set on the preference\r\nis used and set as 'default' in the local storage.\r\nChanging the default preferences works the same way as changing the\r\ncolor mode using the buttons, if the page is loaded.\r\nWhen the page is reloaded, whatever is the value set on the local storage\r\nhas precedence over the values in the preference. If the preference\r\nchanged after the page was visited - and the page is not loaded -\r\nthe last value saved on the local storage is loaded.\r\n*/\r\n\r\nconst darkButton = document.getElementById('dark');\r\nconst lightButton = document.getElementById('light');\r\n\r\nconst setDarkMode = () => {\r\n    document.querySelector('body').classList = 'dark';\r\n    localStorage.setItem('colorMode', 'dark');\r\n};\r\n\r\nconst setLightMode = () => {\r\n    document.querySelector('body').classList = 'light';\r\n    localStorage.setItem('colorMode', 'light');\r\n};\r\n\r\nconst colorModeFromLocalStorage = () => {\r\n    return localStorage.getItem('colorMode');\r\n};\r\n\r\nconst colorModeFromPreferences = () => {\r\n    return window.matchMedia('(prefers-color-scheme: dark)').matches\r\n        ? 'dark'\r\n        : 'light' // If preference is set or does not match anything (light is default)\r\n};\r\n\r\nconst loadAndUpdateColor = () => {\r\n    // local storage has precendence over the prefers-color-scheme\r\n    const color = colorModeFromLocalStorage() || colorModeFromPreferences();\r\n    color == 'dark' ? darkButton.click() : lightButton.click();\r\n};\r\n\r\n// when the inputs are clicked, check which radio button is checked and change the color\r\nconst radioButtons = document.querySelectorAll('.toggle__wrapper input');\r\nradioButtons.forEach(button => {\r\n    button.addEventListener('click', (event) => {\r\n        darkButton.checked ? setDarkMode() : setLightMode();\r\n    });\r\n});\r\n\r\n// when the prefers-color-scheme changes, this event will be emitted\r\n// event reflects the media query, if it matches, the new color is dark, else it is light\r\nwindow.matchMedia('(prefers-color-scheme: dark)')\r\n    .addEventListener('change', (event) => {\r\n        event.matches ? darkButton.click() : lightButton.click();\r\n    });\r\n\r\n// Load the right color on startup - localStorage has precedence\r\nloadAndUpdateColor();"]}